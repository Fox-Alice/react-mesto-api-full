{"ast":null,"code":"import { apiConfig } from \"./constants\";\nclass Api {\n  constructor(options) {\n    this._onResponse = res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Oшибка на стороне сервера');\n    };\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  getAllInfo() {\n    return Promise.all([this.getUser(), this.getInitialCards()]);\n  }\n  getUser() {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(this._onResponse);\n  }\n  editProfile(data) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._onResponse);\n  }\n  getInitialCards() {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(this._onResponse);\n  }\n  removeCard(id) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(this._onResponse);\n  }\n  addCard(_ref) {\n    let {\n      name,\n      link\n    } = _ref;\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._onResponse);\n  }\n  handleLike(id, isLiked) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._onResponse);\n  }\n  updateAvatar(data) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._onResponse);\n  }\n}\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"names":["apiConfig","Api","constructor","options","_onResponse","res","ok","json","Promise","reject","_url","url","_headers","headers","getAllInfo","all","getUser","getInitialCards","token","localStorage","getItem","fetch","authorization","then","editProfile","data","method","body","JSON","stringify","name","about","removeCard","id","addCard","link","handleLike","isLiked","updateAvatar","avatar","api"],"sources":["C:/Users/elvir/dev/react-mesto-api-full/frontend/src/utils/Api.js"],"sourcesContent":["import { apiConfig } from \"./constants\";\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.url;\r\n        this._headers = options.headers\r\n    }\r\n\r\n    _onResponse = (res) => {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        return Promise.reject('Oшибка на стороне сервера')\r\n    }\r\n\r\n    getAllInfo() {\r\n        return Promise.all([this.getUser(), this.getInitialCards()])\r\n    }\r\n\r\n    getUser() {\r\n        const token = localStorage.getItem('jwt');\r\n        return fetch(`${this._url}/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    editProfile(data) {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    getInitialCards() {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/cards/`, {\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    removeCard(id) {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    addCard({ name, link }) {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name, link })\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    handleLike(id, isLiked) {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/cards/${id}/likes`, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n\r\n    updateAvatar(data) {\r\n        const token = localStorage.getItem('jwt');\r\n\r\n        return fetch(`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n            .then(this._onResponse)\r\n    }\r\n}\r\n\r\nconst api = new Api(apiConfig);\r\n\r\nexport default api"],"mappings":"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"},"metadata":{},"sourceType":"module"}